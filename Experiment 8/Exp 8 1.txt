#include <stdio.h>
#include <stdlib.h>

int * my_array = NULL;
int count = 0;
int size = 0;

int main()
{
    printf("Enter Size of Array : ");
    scanf("%d", &size);
    my_array = (int *)malloc(size*sizeof(int));

    while(1){
        int choice = 0;
        printf("1 - Append To Array\n2 - Linear Search\n3 - Binary Search\n4 - Print Array\n5 - Quit\nChoice : ");
        scanf("%d",&choice);
        switch(choice){
            case 1 : append_to_array();break;
            case 2 : linear_search();break;
            case 3 : binary_search();break;
            case 4 : print_array();break;
            case 5 : exit(0);
        }
        printf("\n");
    }
    return 0;
}

void append_to_array(){
    if (count == size){
        printf("Array is Full..\n");
        return;
    }
    int data = 0;
    printf("Enter Number to Append : ");
    scanf("%d",&data);
    my_array[count] = data;
    count++;
}

void linear_search(){
    int element = 0;
    printf("Enter Element To Find : ");
    scanf("%d",&element);
    int flag = 0;
    for (int i = 0; i < count; i++){
        if (my_array[i] == element){
            printf("%d is at Index %d",element,i);
            flag = 1;
            break;
        }
    }
    if (flag == 0){
        printf("Element not in Array... Exiting...\n");
    }
}

void binary_search(){
    bubble_sort();
    int element;
    printf("Enter Element To Find : ");
    scanf("%d",&element);
    int low = 0;
    int high = count - 1;
    if (my_array[high] == element){
        printf("Element %d is at Index %d",element, high);
        return;
    }
    if (my_array[low] == element){
        printf("Element %d is at Index %d",element, low);
        return;
    }
    int mid = (high + low)/2;
    while (my_array[mid] != element){
        if (low == high - 1){
            if (my_array[high] == element){
                printf("Element %d is at Index %d",element, high);
                return;
            }
            if (my_array[low] == element){
                printf("Element %d is at Index %d",element, low);
                return;
            }
            printf("Element NOT in Array...\n");
            return;
        }
        if (element > my_array[mid]){
            low = mid;
            mid = (high + low)/2;
            continue;
        }
        if (element < my_array[mid]){
            high = mid;
            mid = (high + low)/2;
            continue;
        }
    }
    printf("Element %d is at Index %d",element, mid);
}

void bubble_sort(){
    int flag = 1;
    while(flag == 1){
        flag = 0;
        for (int i = 0 ; i+1 < count ;i++){
            if (my_array[i] > my_array[i+1]){
                flag = 1;
                swap(i,i+1);
            }
        }
    }
}

void print_array(){
    printf("\n");
    for (int i = 0; i < count; i++){
        printf("| %d |",my_array[i]);
    }
    printf("\n");
}

void swap(int i, int j){
    int temp = my_array[i];
    my_array[i] = my_array[j];
    my_array[j] = temp;
}
